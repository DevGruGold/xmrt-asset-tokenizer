version: '3.8'

services:
  xmrt_asset_tokenizer:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: curl -f http://localhost:3000/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - xmrt-network

  # Database (if needed)
  postgresql:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: xmrt_db
      POSTGRES_USER: xmrt_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-xmrt_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - xmrt-network

  # Redis (if needed)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - xmrt-network

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - xmrt-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:

networks:
  xmrt-network:
    driver: bridge
